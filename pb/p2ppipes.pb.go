// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: p2ppipes.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PeerDiscoveryMethod int32

const (
	PeerDiscoveryMethod_PEERDISCOVERYMETHODUNDEFINED PeerDiscoveryMethod = 0
	PeerDiscoveryMethod_DHT                          PeerDiscoveryMethod = 1
	PeerDiscoveryMethod_MDNS                         PeerDiscoveryMethod = 2
)

// Enum value maps for PeerDiscoveryMethod.
var (
	PeerDiscoveryMethod_name = map[int32]string{
		0: "PEERDISCOVERYMETHODUNDEFINED",
		1: "DHT",
		2: "MDNS",
	}
	PeerDiscoveryMethod_value = map[string]int32{
		"PEERDISCOVERYMETHODUNDEFINED": 0,
		"DHT":                          1,
		"MDNS":                         2,
	}
)

func (x PeerDiscoveryMethod) Enum() *PeerDiscoveryMethod {
	p := new(PeerDiscoveryMethod)
	*p = x
	return p
}

func (x PeerDiscoveryMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PeerDiscoveryMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_p2ppipes_proto_enumTypes[0].Descriptor()
}

func (PeerDiscoveryMethod) Type() protoreflect.EnumType {
	return &file_p2ppipes_proto_enumTypes[0]
}

func (x PeerDiscoveryMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PeerDiscoveryMethod.Descriptor instead.
func (PeerDiscoveryMethod) EnumDescriptor() ([]byte, []int) {
	return file_p2ppipes_proto_rawDescGZIP(), []int{0}
}

type PeerType int32

const (
	PeerType_PEERTYPEUNDEFIEND PeerType = 0
	PeerType_ALL               PeerType = 1
	PeerType_CONNECTED         PeerType = 2
	PeerType_DISCOVERED        PeerType = 3
)

// Enum value maps for PeerType.
var (
	PeerType_name = map[int32]string{
		0: "PEERTYPEUNDEFIEND",
		1: "ALL",
		2: "CONNECTED",
		3: "DISCOVERED",
	}
	PeerType_value = map[string]int32{
		"PEERTYPEUNDEFIEND": 0,
		"ALL":               1,
		"CONNECTED":         2,
		"DISCOVERED":        3,
	}
)

func (x PeerType) Enum() *PeerType {
	p := new(PeerType)
	*p = x
	return p
}

func (x PeerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PeerType) Descriptor() protoreflect.EnumDescriptor {
	return file_p2ppipes_proto_enumTypes[1].Descriptor()
}

func (PeerType) Type() protoreflect.EnumType {
	return &file_p2ppipes_proto_enumTypes[1]
}

func (x PeerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PeerType.Descriptor instead.
func (PeerType) EnumDescriptor() ([]byte, []int) {
	return file_p2ppipes_proto_rawDescGZIP(), []int{1}
}

type IOType int32

const (
	IOType_IOTYPEUNDEFINED IOType = 0
	IOType_NULL            IOType = 1 // Output will be ignored, while input will be null.
	IOType_TCP             IOType = 2
	IOType_UDP             IOType = 3
	IOType_UNIX            IOType = 4
)

// Enum value maps for IOType.
var (
	IOType_name = map[int32]string{
		0: "IOTYPEUNDEFINED",
		1: "NULL",
		2: "TCP",
		3: "UDP",
		4: "UNIX",
	}
	IOType_value = map[string]int32{
		"IOTYPEUNDEFINED": 0,
		"NULL":            1,
		"TCP":             2,
		"UDP":             3,
		"UNIX":            4,
	}
)

func (x IOType) Enum() *IOType {
	p := new(IOType)
	*p = x
	return p
}

func (x IOType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IOType) Descriptor() protoreflect.EnumDescriptor {
	return file_p2ppipes_proto_enumTypes[2].Descriptor()
}

func (IOType) Type() protoreflect.EnumType {
	return &file_p2ppipes_proto_enumTypes[2]
}

func (x IOType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IOType.Descriptor instead.
func (IOType) EnumDescriptor() ([]byte, []int) {
	return file_p2ppipes_proto_rawDescGZIP(), []int{2}
}

type DHTDiscoveryArguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rv string `protobuf:"bytes,1,opt,name=rv,proto3" json:"rv,omitempty"`
}

func (x *DHTDiscoveryArguments) Reset() {
	*x = DHTDiscoveryArguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2ppipes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DHTDiscoveryArguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DHTDiscoveryArguments) ProtoMessage() {}

func (x *DHTDiscoveryArguments) ProtoReflect() protoreflect.Message {
	mi := &file_p2ppipes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DHTDiscoveryArguments.ProtoReflect.Descriptor instead.
func (*DHTDiscoveryArguments) Descriptor() ([]byte, []int) {
	return file_p2ppipes_proto_rawDescGZIP(), []int{0}
}

func (x *DHTDiscoveryArguments) GetRv() string {
	if x != nil {
		return x.Rv
	}
	return ""
}

type MDNSDiscoveryArguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MDNSDiscoveryArguments) Reset() {
	*x = MDNSDiscoveryArguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2ppipes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MDNSDiscoveryArguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MDNSDiscoveryArguments) ProtoMessage() {}

func (x *MDNSDiscoveryArguments) ProtoReflect() protoreflect.Message {
	mi := &file_p2ppipes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MDNSDiscoveryArguments.ProtoReflect.Descriptor instead.
func (*MDNSDiscoveryArguments) Descriptor() ([]byte, []int) {
	return file_p2ppipes_proto_rawDescGZIP(), []int{1}
}

type StartDiscoveringPeersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method PeerDiscoveryMethod `protobuf:"varint,1,opt,name=method,proto3,enum=p2ppipes.PeerDiscoveryMethod" json:"method,omitempty"`
	// Types that are assignable to Arguments:
	//
	//	*StartDiscoveringPeersRequest_Dht
	//	*StartDiscoveringPeersRequest_Mdns
	Arguments isStartDiscoveringPeersRequest_Arguments `protobuf_oneof:"arguments"`
}

func (x *StartDiscoveringPeersRequest) Reset() {
	*x = StartDiscoveringPeersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2ppipes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartDiscoveringPeersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartDiscoveringPeersRequest) ProtoMessage() {}

func (x *StartDiscoveringPeersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_p2ppipes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartDiscoveringPeersRequest.ProtoReflect.Descriptor instead.
func (*StartDiscoveringPeersRequest) Descriptor() ([]byte, []int) {
	return file_p2ppipes_proto_rawDescGZIP(), []int{2}
}

func (x *StartDiscoveringPeersRequest) GetMethod() PeerDiscoveryMethod {
	if x != nil {
		return x.Method
	}
	return PeerDiscoveryMethod_PEERDISCOVERYMETHODUNDEFINED
}

func (m *StartDiscoveringPeersRequest) GetArguments() isStartDiscoveringPeersRequest_Arguments {
	if m != nil {
		return m.Arguments
	}
	return nil
}

func (x *StartDiscoveringPeersRequest) GetDht() *DHTDiscoveryArguments {
	if x, ok := x.GetArguments().(*StartDiscoveringPeersRequest_Dht); ok {
		return x.Dht
	}
	return nil
}

func (x *StartDiscoveringPeersRequest) GetMdns() *MDNSDiscoveryArguments {
	if x, ok := x.GetArguments().(*StartDiscoveringPeersRequest_Mdns); ok {
		return x.Mdns
	}
	return nil
}

type isStartDiscoveringPeersRequest_Arguments interface {
	isStartDiscoveringPeersRequest_Arguments()
}

type StartDiscoveringPeersRequest_Dht struct {
	Dht *DHTDiscoveryArguments `protobuf:"bytes,2,opt,name=dht,proto3,oneof"`
}

type StartDiscoveringPeersRequest_Mdns struct {
	Mdns *MDNSDiscoveryArguments `protobuf:"bytes,3,opt,name=mdns,proto3,oneof"`
}

func (*StartDiscoveringPeersRequest_Dht) isStartDiscoveringPeersRequest_Arguments() {}

func (*StartDiscoveringPeersRequest_Mdns) isStartDiscoveringPeersRequest_Arguments() {}

type StartDiscoveringPeersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartDiscoveringPeersResponse) Reset() {
	*x = StartDiscoveringPeersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2ppipes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartDiscoveringPeersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartDiscoveringPeersResponse) ProtoMessage() {}

func (x *StartDiscoveringPeersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_p2ppipes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartDiscoveringPeersResponse.ProtoReflect.Descriptor instead.
func (*StartDiscoveringPeersResponse) Descriptor() ([]byte, []int) {
	return file_p2ppipes_proto_rawDescGZIP(), []int{3}
}

type StopDiscoveringPeersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method PeerDiscoveryMethod `protobuf:"varint,1,opt,name=method,proto3,enum=p2ppipes.PeerDiscoveryMethod" json:"method,omitempty"`
	// Types that are assignable to Arguments:
	//
	//	*StopDiscoveringPeersRequest_Dht
	//	*StopDiscoveringPeersRequest_Mdns
	Arguments isStopDiscoveringPeersRequest_Arguments `protobuf_oneof:"arguments"`
}

func (x *StopDiscoveringPeersRequest) Reset() {
	*x = StopDiscoveringPeersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2ppipes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopDiscoveringPeersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopDiscoveringPeersRequest) ProtoMessage() {}

func (x *StopDiscoveringPeersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_p2ppipes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopDiscoveringPeersRequest.ProtoReflect.Descriptor instead.
func (*StopDiscoveringPeersRequest) Descriptor() ([]byte, []int) {
	return file_p2ppipes_proto_rawDescGZIP(), []int{4}
}

func (x *StopDiscoveringPeersRequest) GetMethod() PeerDiscoveryMethod {
	if x != nil {
		return x.Method
	}
	return PeerDiscoveryMethod_PEERDISCOVERYMETHODUNDEFINED
}

func (m *StopDiscoveringPeersRequest) GetArguments() isStopDiscoveringPeersRequest_Arguments {
	if m != nil {
		return m.Arguments
	}
	return nil
}

func (x *StopDiscoveringPeersRequest) GetDht() *DHTDiscoveryArguments {
	if x, ok := x.GetArguments().(*StopDiscoveringPeersRequest_Dht); ok {
		return x.Dht
	}
	return nil
}

func (x *StopDiscoveringPeersRequest) GetMdns() *MDNSDiscoveryArguments {
	if x, ok := x.GetArguments().(*StopDiscoveringPeersRequest_Mdns); ok {
		return x.Mdns
	}
	return nil
}

type isStopDiscoveringPeersRequest_Arguments interface {
	isStopDiscoveringPeersRequest_Arguments()
}

type StopDiscoveringPeersRequest_Dht struct {
	Dht *DHTDiscoveryArguments `protobuf:"bytes,2,opt,name=dht,proto3,oneof"`
}

type StopDiscoveringPeersRequest_Mdns struct {
	Mdns *MDNSDiscoveryArguments `protobuf:"bytes,3,opt,name=mdns,proto3,oneof"`
}

func (*StopDiscoveringPeersRequest_Dht) isStopDiscoveringPeersRequest_Arguments() {}

func (*StopDiscoveringPeersRequest_Mdns) isStopDiscoveringPeersRequest_Arguments() {}

type StopDiscoveringPeersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopDiscoveringPeersResponse) Reset() {
	*x = StopDiscoveringPeersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2ppipes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopDiscoveringPeersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopDiscoveringPeersResponse) ProtoMessage() {}

func (x *StopDiscoveringPeersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_p2ppipes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopDiscoveringPeersResponse.ProtoReflect.Descriptor instead.
func (*StopDiscoveringPeersResponse) Descriptor() ([]byte, []int) {
	return file_p2ppipes_proto_rawDescGZIP(), []int{5}
}

type Peer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Addresses []string `protobuf:"bytes,2,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *Peer) Reset() {
	*x = Peer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2ppipes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_p2ppipes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_p2ppipes_proto_rawDescGZIP(), []int{6}
}

func (x *Peer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Peer) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type ListPeersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerType PeerType `protobuf:"varint,1,opt,name=peer_type,json=peerType,proto3,enum=p2ppipes.PeerType" json:"peer_type,omitempty"`
}

func (x *ListPeersRequest) Reset() {
	*x = ListPeersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2ppipes_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPeersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPeersRequest) ProtoMessage() {}

func (x *ListPeersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_p2ppipes_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPeersRequest.ProtoReflect.Descriptor instead.
func (*ListPeersRequest) Descriptor() ([]byte, []int) {
	return file_p2ppipes_proto_rawDescGZIP(), []int{7}
}

func (x *ListPeersRequest) GetPeerType() PeerType {
	if x != nil {
		return x.PeerType
	}
	return PeerType_PEERTYPEUNDEFIEND
}

type ListPeersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peers []*Peer `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
}

func (x *ListPeersResponse) Reset() {
	*x = ListPeersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2ppipes_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPeersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPeersResponse) ProtoMessage() {}

func (x *ListPeersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_p2ppipes_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPeersResponse.ProtoReflect.Descriptor instead.
func (*ListPeersResponse) Descriptor() ([]byte, []int) {
	return file_p2ppipes_proto_rawDescGZIP(), []int{8}
}

func (x *ListPeersResponse) GetPeers() []*Peer {
	if x != nil {
		return x.Peers
	}
	return nil
}

type ListDiscoveredPeersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method PeerDiscoveryMethod `protobuf:"varint,1,opt,name=method,proto3,enum=p2ppipes.PeerDiscoveryMethod" json:"method,omitempty"`
	// Types that are assignable to Arguments:
	//
	//	*ListDiscoveredPeersRequest_Dht
	//	*ListDiscoveredPeersRequest_Mdns
	Arguments isListDiscoveredPeersRequest_Arguments `protobuf_oneof:"arguments"`
}

func (x *ListDiscoveredPeersRequest) Reset() {
	*x = ListDiscoveredPeersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2ppipes_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDiscoveredPeersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDiscoveredPeersRequest) ProtoMessage() {}

func (x *ListDiscoveredPeersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_p2ppipes_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDiscoveredPeersRequest.ProtoReflect.Descriptor instead.
func (*ListDiscoveredPeersRequest) Descriptor() ([]byte, []int) {
	return file_p2ppipes_proto_rawDescGZIP(), []int{9}
}

func (x *ListDiscoveredPeersRequest) GetMethod() PeerDiscoveryMethod {
	if x != nil {
		return x.Method
	}
	return PeerDiscoveryMethod_PEERDISCOVERYMETHODUNDEFINED
}

func (m *ListDiscoveredPeersRequest) GetArguments() isListDiscoveredPeersRequest_Arguments {
	if m != nil {
		return m.Arguments
	}
	return nil
}

func (x *ListDiscoveredPeersRequest) GetDht() *DHTDiscoveryArguments {
	if x, ok := x.GetArguments().(*ListDiscoveredPeersRequest_Dht); ok {
		return x.Dht
	}
	return nil
}

func (x *ListDiscoveredPeersRequest) GetMdns() *MDNSDiscoveryArguments {
	if x, ok := x.GetArguments().(*ListDiscoveredPeersRequest_Mdns); ok {
		return x.Mdns
	}
	return nil
}

type isListDiscoveredPeersRequest_Arguments interface {
	isListDiscoveredPeersRequest_Arguments()
}

type ListDiscoveredPeersRequest_Dht struct {
	Dht *DHTDiscoveryArguments `protobuf:"bytes,2,opt,name=dht,proto3,oneof"`
}

type ListDiscoveredPeersRequest_Mdns struct {
	Mdns *MDNSDiscoveryArguments `protobuf:"bytes,3,opt,name=mdns,proto3,oneof"`
}

func (*ListDiscoveredPeersRequest_Dht) isListDiscoveredPeersRequest_Arguments() {}

func (*ListDiscoveredPeersRequest_Mdns) isListDiscoveredPeersRequest_Arguments() {}

type ListDiscoveredPeersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peers []*Peer `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
}

func (x *ListDiscoveredPeersResponse) Reset() {
	*x = ListDiscoveredPeersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2ppipes_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDiscoveredPeersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDiscoveredPeersResponse) ProtoMessage() {}

func (x *ListDiscoveredPeersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_p2ppipes_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDiscoveredPeersResponse.ProtoReflect.Descriptor instead.
func (*ListDiscoveredPeersResponse) Descriptor() ([]byte, []int) {
	return file_p2ppipes_proto_rawDescGZIP(), []int{10}
}

func (x *ListDiscoveredPeersResponse) GetPeers() []*Peer {
	if x != nil {
		return x.Peers
	}
	return nil
}

type NullIO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NullIO) Reset() {
	*x = NullIO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2ppipes_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NullIO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NullIO) ProtoMessage() {}

func (x *NullIO) ProtoReflect() protoreflect.Message {
	mi := &file_p2ppipes_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NullIO.ProtoReflect.Descriptor instead.
func (*NullIO) Descriptor() ([]byte, []int) {
	return file_p2ppipes_proto_rawDescGZIP(), []int{11}
}

type IO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IoType IOType `protobuf:"varint,1,opt,name=io_type,json=ioType,proto3,enum=p2ppipes.IOType" json:"io_type,omitempty"`
	// Types that are assignable to Io:
	//
	//	*IO_Null
	//	*IO_Tcp
	//	*IO_Udp
	//	*IO_Unix
	Io isIO_Io `protobuf_oneof:"io"`
}

func (x *IO) Reset() {
	*x = IO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2ppipes_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IO) ProtoMessage() {}

func (x *IO) ProtoReflect() protoreflect.Message {
	mi := &file_p2ppipes_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IO.ProtoReflect.Descriptor instead.
func (*IO) Descriptor() ([]byte, []int) {
	return file_p2ppipes_proto_rawDescGZIP(), []int{12}
}

func (x *IO) GetIoType() IOType {
	if x != nil {
		return x.IoType
	}
	return IOType_IOTYPEUNDEFINED
}

func (m *IO) GetIo() isIO_Io {
	if m != nil {
		return m.Io
	}
	return nil
}

func (x *IO) GetNull() *NullIO {
	if x, ok := x.GetIo().(*IO_Null); ok {
		return x.Null
	}
	return nil
}

func (x *IO) GetTcp() string {
	if x, ok := x.GetIo().(*IO_Tcp); ok {
		return x.Tcp
	}
	return ""
}

func (x *IO) GetUdp() string {
	if x, ok := x.GetIo().(*IO_Udp); ok {
		return x.Udp
	}
	return ""
}

func (x *IO) GetUnix() string {
	if x, ok := x.GetIo().(*IO_Unix); ok {
		return x.Unix
	}
	return ""
}

type isIO_Io interface {
	isIO_Io()
}

type IO_Null struct {
	Null *NullIO `protobuf:"bytes,2,opt,name=null,proto3,oneof"`
}

type IO_Tcp struct {
	Tcp string `protobuf:"bytes,3,opt,name=tcp,proto3,oneof"`
}

type IO_Udp struct {
	Udp string `protobuf:"bytes,4,opt,name=udp,proto3,oneof"`
}

type IO_Unix struct {
	Unix string `protobuf:"bytes,5,opt,name=unix,proto3,oneof"`
}

func (*IO_Null) isIO_Io() {}

func (*IO_Tcp) isIO_Io() {}

func (*IO_Udp) isIO_Io() {}

func (*IO_Unix) isIO_Io() {}

type StartForwardingIORequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer     *Peer `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	RemoteIo *IO   `protobuf:"bytes,2,opt,name=remote_io,json=remoteIo,proto3" json:"remote_io,omitempty"`
	LocalIo  *IO   `protobuf:"bytes,3,opt,name=local_io,json=localIo,proto3" json:"local_io,omitempty"`
}

func (x *StartForwardingIORequest) Reset() {
	*x = StartForwardingIORequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2ppipes_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartForwardingIORequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartForwardingIORequest) ProtoMessage() {}

func (x *StartForwardingIORequest) ProtoReflect() protoreflect.Message {
	mi := &file_p2ppipes_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartForwardingIORequest.ProtoReflect.Descriptor instead.
func (*StartForwardingIORequest) Descriptor() ([]byte, []int) {
	return file_p2ppipes_proto_rawDescGZIP(), []int{13}
}

func (x *StartForwardingIORequest) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *StartForwardingIORequest) GetRemoteIo() *IO {
	if x != nil {
		return x.RemoteIo
	}
	return nil
}

func (x *StartForwardingIORequest) GetLocalIo() *IO {
	if x != nil {
		return x.LocalIo
	}
	return nil
}

type StartForwardingIOResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartForwardingIOResponse) Reset() {
	*x = StartForwardingIOResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2ppipes_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartForwardingIOResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartForwardingIOResponse) ProtoMessage() {}

func (x *StartForwardingIOResponse) ProtoReflect() protoreflect.Message {
	mi := &file_p2ppipes_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartForwardingIOResponse.ProtoReflect.Descriptor instead.
func (*StartForwardingIOResponse) Descriptor() ([]byte, []int) {
	return file_p2ppipes_proto_rawDescGZIP(), []int{14}
}

type StopForwardingIORequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalIo *IO `protobuf:"bytes,1,opt,name=local_io,json=localIo,proto3" json:"local_io,omitempty"`
}

func (x *StopForwardingIORequest) Reset() {
	*x = StopForwardingIORequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2ppipes_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopForwardingIORequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopForwardingIORequest) ProtoMessage() {}

func (x *StopForwardingIORequest) ProtoReflect() protoreflect.Message {
	mi := &file_p2ppipes_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopForwardingIORequest.ProtoReflect.Descriptor instead.
func (*StopForwardingIORequest) Descriptor() ([]byte, []int) {
	return file_p2ppipes_proto_rawDescGZIP(), []int{15}
}

func (x *StopForwardingIORequest) GetLocalIo() *IO {
	if x != nil {
		return x.LocalIo
	}
	return nil
}

type StopForwardingIOResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopForwardingIOResponse) Reset() {
	*x = StopForwardingIOResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2ppipes_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopForwardingIOResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopForwardingIOResponse) ProtoMessage() {}

func (x *StopForwardingIOResponse) ProtoReflect() protoreflect.Message {
	mi := &file_p2ppipes_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopForwardingIOResponse.ProtoReflect.Descriptor instead.
func (*StopForwardingIOResponse) Descriptor() ([]byte, []int) {
	return file_p2ppipes_proto_rawDescGZIP(), []int{16}
}

var File_p2ppipes_proto protoreflect.FileDescriptor

var file_p2ppipes_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x32, 0x70, 0x70, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x70, 0x32, 0x70, 0x70, 0x69, 0x70, 0x65, 0x73, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x48,
	0x54, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x72, 0x76, 0x22, 0x18, 0x0a, 0x16, 0x4d, 0x44, 0x4e, 0x53, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xcf, 0x01,
	0x0a, 0x1c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35,
	0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x70, 0x32, 0x70, 0x70, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x64, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x32, 0x70, 0x70, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x48,
	0x54, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x48, 0x00, 0x52, 0x03, 0x64, 0x68, 0x74, 0x12, 0x36, 0x0a, 0x04, 0x6d, 0x64,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x32, 0x70, 0x70, 0x69,
	0x70, 0x65, 0x73, 0x2e, 0x4d, 0x44, 0x4e, 0x53, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x64,
	0x6e, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x1f, 0x0a, 0x1d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xce, 0x01, 0x0a, 0x1b, 0x53, 0x74, 0x6f, 0x70, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x35, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x70, 0x32, 0x70, 0x70, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x65, 0x72,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x64, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x32, 0x70, 0x70, 0x69, 0x70, 0x65, 0x73, 0x2e,
	0x44, 0x48, 0x54, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x41, 0x72, 0x67, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x48, 0x00, 0x52, 0x03, 0x64, 0x68, 0x74, 0x12, 0x36, 0x0a, 0x04,
	0x6d, 0x64, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x32, 0x70,
	0x70, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x4d, 0x44, 0x4e, 0x53, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x48, 0x00, 0x52, 0x04,
	0x6d, 0x64, 0x6e, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0x1e, 0x0a, 0x1c, 0x53, 0x74, 0x6f, 0x70, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x34, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x43, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x70,
	0x65, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x70, 0x32, 0x70, 0x70, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x39, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x24, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x32, 0x70, 0x70, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x65, 0x72,
	0x52, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x22, 0xcd, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x32, 0x70, 0x70, 0x69, 0x70, 0x65,
	0x73, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x33, 0x0a,
	0x03, 0x64, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x32, 0x70,
	0x70, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x48, 0x54, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x48, 0x00, 0x52, 0x03, 0x64,
	0x68, 0x74, 0x12, 0x36, 0x0a, 0x04, 0x6d, 0x64, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x70, 0x32, 0x70, 0x70, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x4d, 0x44, 0x4e, 0x53,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x64, 0x6e, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x61, 0x72,
	0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x43, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x32, 0x70, 0x70, 0x69, 0x70, 0x65, 0x73,
	0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x22, 0x08, 0x0a, 0x06,
	0x4e, 0x75, 0x6c, 0x6c, 0x49, 0x4f, 0x22, 0x9b, 0x01, 0x0a, 0x02, 0x49, 0x4f, 0x12, 0x29, 0x0a,
	0x07, 0x69, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x70, 0x32, 0x70, 0x70, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x4f, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x06, 0x69, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6e, 0x75, 0x6c, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x32, 0x70, 0x70, 0x69, 0x70, 0x65,
	0x73, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x49, 0x4f, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x75, 0x6c, 0x6c,
	0x12, 0x12, 0x0a, 0x03, 0x74, 0x63, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x03, 0x74, 0x63, 0x70, 0x12, 0x12, 0x0a, 0x03, 0x75, 0x64, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x75, 0x64, 0x70, 0x12, 0x14, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x78,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x78, 0x42, 0x04,
	0x0a, 0x02, 0x69, 0x6f, 0x22, 0x92, 0x01, 0x0a, 0x18, 0x53, 0x74, 0x61, 0x72, 0x74, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x4f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x32, 0x70, 0x70, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52,
	0x04, 0x70, 0x65, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f,
	0x69, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x32, 0x70, 0x70, 0x69,
	0x70, 0x65, 0x73, 0x2e, 0x49, 0x4f, 0x52, 0x08, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x6f,
	0x12, 0x27, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x32, 0x70, 0x70, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x4f,
	0x52, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x6f, 0x22, 0x1b, 0x0a, 0x19, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x4f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x0a, 0x17, 0x53, 0x74, 0x6f, 0x70, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x4f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x32, 0x70, 0x70, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x49,
	0x4f, 0x52, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x6f, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x74,
	0x6f, 0x70, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x4f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x4a, 0x0a, 0x13, 0x50, 0x65, 0x65, 0x72, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x20, 0x0a,
	0x1c, 0x50, 0x45, 0x45, 0x52, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x59, 0x4d, 0x45,
	0x54, 0x48, 0x4f, 0x44, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x44, 0x48, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x44, 0x4e, 0x53,
	0x10, 0x02, 0x2a, 0x49, 0x0a, 0x08, 0x50, 0x65, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15,
	0x0a, 0x11, 0x50, 0x45, 0x45, 0x52, 0x54, 0x59, 0x50, 0x45, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49,
	0x45, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0e, 0x0a,
	0x0a, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x43, 0x0a,
	0x06, 0x49, 0x4f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4f, 0x54, 0x59, 0x50,
	0x45, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x43, 0x50, 0x10, 0x02, 0x12,
	0x07, 0x0a, 0x03, 0x55, 0x44, 0x50, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x4e, 0x49, 0x58,
	0x10, 0x04, 0x32, 0xc9, 0x04, 0x0a, 0x07, 0x50, 0x32, 0x50, 0x50, 0x69, 0x70, 0x65, 0x12, 0x6a,
	0x0a, 0x15, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x26, 0x2e, 0x70, 0x32, 0x70, 0x70, 0x69, 0x70,
	0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x70, 0x32, 0x70, 0x70, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x14, 0x53, 0x74,
	0x6f, 0x70, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x65,
	0x72, 0x73, 0x12, 0x25, 0x2e, 0x70, 0x32, 0x70, 0x70, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x74,
	0x6f, 0x70, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x32, 0x70, 0x70,
	0x69, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73,
	0x12, 0x1a, 0x2e, 0x70, 0x32, 0x70, 0x70, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70,
	0x32, 0x70, 0x70, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x50, 0x65, 0x65,
	0x72, 0x73, 0x12, 0x24, 0x2e, 0x70, 0x32, 0x70, 0x70, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x50, 0x65, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x32, 0x70, 0x70, 0x69,
	0x70, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x65, 0x64, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5e, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x49, 0x4f, 0x12, 0x22, 0x2e, 0x70, 0x32, 0x70, 0x70, 0x69, 0x70, 0x65,
	0x73, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x49, 0x4f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x32, 0x70,
	0x70, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x4f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5b, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x70, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x49, 0x4f, 0x12, 0x21, 0x2e, 0x70, 0x32, 0x70, 0x70, 0x69, 0x70, 0x65, 0x73,
	0x2e, 0x53, 0x74, 0x6f, 0x70, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x49,
	0x4f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x32, 0x70, 0x70, 0x69,
	0x70, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x49, 0x4f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2d,
	0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x75, 0x6e, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x32, 0x70, 0x2d, 0x70, 0x69, 0x70, 0x65,
	0x73, 0x2f, 0x70, 0x32, 0x70, 0x70, 0x69, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_p2ppipes_proto_rawDescOnce sync.Once
	file_p2ppipes_proto_rawDescData = file_p2ppipes_proto_rawDesc
)

func file_p2ppipes_proto_rawDescGZIP() []byte {
	file_p2ppipes_proto_rawDescOnce.Do(func() {
		file_p2ppipes_proto_rawDescData = protoimpl.X.CompressGZIP(file_p2ppipes_proto_rawDescData)
	})
	return file_p2ppipes_proto_rawDescData
}

var file_p2ppipes_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_p2ppipes_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_p2ppipes_proto_goTypes = []interface{}{
	(PeerDiscoveryMethod)(0),              // 0: p2ppipes.PeerDiscoveryMethod
	(PeerType)(0),                         // 1: p2ppipes.PeerType
	(IOType)(0),                           // 2: p2ppipes.IOType
	(*DHTDiscoveryArguments)(nil),         // 3: p2ppipes.DHTDiscoveryArguments
	(*MDNSDiscoveryArguments)(nil),        // 4: p2ppipes.MDNSDiscoveryArguments
	(*StartDiscoveringPeersRequest)(nil),  // 5: p2ppipes.StartDiscoveringPeersRequest
	(*StartDiscoveringPeersResponse)(nil), // 6: p2ppipes.StartDiscoveringPeersResponse
	(*StopDiscoveringPeersRequest)(nil),   // 7: p2ppipes.StopDiscoveringPeersRequest
	(*StopDiscoveringPeersResponse)(nil),  // 8: p2ppipes.StopDiscoveringPeersResponse
	(*Peer)(nil),                          // 9: p2ppipes.Peer
	(*ListPeersRequest)(nil),              // 10: p2ppipes.ListPeersRequest
	(*ListPeersResponse)(nil),             // 11: p2ppipes.ListPeersResponse
	(*ListDiscoveredPeersRequest)(nil),    // 12: p2ppipes.ListDiscoveredPeersRequest
	(*ListDiscoveredPeersResponse)(nil),   // 13: p2ppipes.ListDiscoveredPeersResponse
	(*NullIO)(nil),                        // 14: p2ppipes.NullIO
	(*IO)(nil),                            // 15: p2ppipes.IO
	(*StartForwardingIORequest)(nil),      // 16: p2ppipes.StartForwardingIORequest
	(*StartForwardingIOResponse)(nil),     // 17: p2ppipes.StartForwardingIOResponse
	(*StopForwardingIORequest)(nil),       // 18: p2ppipes.StopForwardingIORequest
	(*StopForwardingIOResponse)(nil),      // 19: p2ppipes.StopForwardingIOResponse
}
var file_p2ppipes_proto_depIdxs = []int32{
	0,  // 0: p2ppipes.StartDiscoveringPeersRequest.method:type_name -> p2ppipes.PeerDiscoveryMethod
	3,  // 1: p2ppipes.StartDiscoveringPeersRequest.dht:type_name -> p2ppipes.DHTDiscoveryArguments
	4,  // 2: p2ppipes.StartDiscoveringPeersRequest.mdns:type_name -> p2ppipes.MDNSDiscoveryArguments
	0,  // 3: p2ppipes.StopDiscoveringPeersRequest.method:type_name -> p2ppipes.PeerDiscoveryMethod
	3,  // 4: p2ppipes.StopDiscoveringPeersRequest.dht:type_name -> p2ppipes.DHTDiscoveryArguments
	4,  // 5: p2ppipes.StopDiscoveringPeersRequest.mdns:type_name -> p2ppipes.MDNSDiscoveryArguments
	1,  // 6: p2ppipes.ListPeersRequest.peer_type:type_name -> p2ppipes.PeerType
	9,  // 7: p2ppipes.ListPeersResponse.peers:type_name -> p2ppipes.Peer
	0,  // 8: p2ppipes.ListDiscoveredPeersRequest.method:type_name -> p2ppipes.PeerDiscoveryMethod
	3,  // 9: p2ppipes.ListDiscoveredPeersRequest.dht:type_name -> p2ppipes.DHTDiscoveryArguments
	4,  // 10: p2ppipes.ListDiscoveredPeersRequest.mdns:type_name -> p2ppipes.MDNSDiscoveryArguments
	9,  // 11: p2ppipes.ListDiscoveredPeersResponse.peers:type_name -> p2ppipes.Peer
	2,  // 12: p2ppipes.IO.io_type:type_name -> p2ppipes.IOType
	14, // 13: p2ppipes.IO.null:type_name -> p2ppipes.NullIO
	9,  // 14: p2ppipes.StartForwardingIORequest.peer:type_name -> p2ppipes.Peer
	15, // 15: p2ppipes.StartForwardingIORequest.remote_io:type_name -> p2ppipes.IO
	15, // 16: p2ppipes.StartForwardingIORequest.local_io:type_name -> p2ppipes.IO
	15, // 17: p2ppipes.StopForwardingIORequest.local_io:type_name -> p2ppipes.IO
	5,  // 18: p2ppipes.P2PPipe.StartDiscoveringPeers:input_type -> p2ppipes.StartDiscoveringPeersRequest
	7,  // 19: p2ppipes.P2PPipe.StopDiscoveringPeers:input_type -> p2ppipes.StopDiscoveringPeersRequest
	10, // 20: p2ppipes.P2PPipe.ListPeers:input_type -> p2ppipes.ListPeersRequest
	12, // 21: p2ppipes.P2PPipe.ListDiscoveredPeers:input_type -> p2ppipes.ListDiscoveredPeersRequest
	16, // 22: p2ppipes.P2PPipe.StartForwardingIO:input_type -> p2ppipes.StartForwardingIORequest
	18, // 23: p2ppipes.P2PPipe.StopForwardingIO:input_type -> p2ppipes.StopForwardingIORequest
	6,  // 24: p2ppipes.P2PPipe.StartDiscoveringPeers:output_type -> p2ppipes.StartDiscoveringPeersResponse
	8,  // 25: p2ppipes.P2PPipe.StopDiscoveringPeers:output_type -> p2ppipes.StopDiscoveringPeersResponse
	11, // 26: p2ppipes.P2PPipe.ListPeers:output_type -> p2ppipes.ListPeersResponse
	13, // 27: p2ppipes.P2PPipe.ListDiscoveredPeers:output_type -> p2ppipes.ListDiscoveredPeersResponse
	17, // 28: p2ppipes.P2PPipe.StartForwardingIO:output_type -> p2ppipes.StartForwardingIOResponse
	19, // 29: p2ppipes.P2PPipe.StopForwardingIO:output_type -> p2ppipes.StopForwardingIOResponse
	24, // [24:30] is the sub-list for method output_type
	18, // [18:24] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_p2ppipes_proto_init() }
func file_p2ppipes_proto_init() {
	if File_p2ppipes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_p2ppipes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DHTDiscoveryArguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2ppipes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MDNSDiscoveryArguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2ppipes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartDiscoveringPeersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2ppipes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartDiscoveringPeersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2ppipes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopDiscoveringPeersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2ppipes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopDiscoveringPeersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2ppipes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2ppipes_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPeersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2ppipes_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPeersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2ppipes_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDiscoveredPeersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2ppipes_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDiscoveredPeersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2ppipes_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NullIO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2ppipes_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2ppipes_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartForwardingIORequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2ppipes_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartForwardingIOResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2ppipes_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopForwardingIORequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2ppipes_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopForwardingIOResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_p2ppipes_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*StartDiscoveringPeersRequest_Dht)(nil),
		(*StartDiscoveringPeersRequest_Mdns)(nil),
	}
	file_p2ppipes_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*StopDiscoveringPeersRequest_Dht)(nil),
		(*StopDiscoveringPeersRequest_Mdns)(nil),
	}
	file_p2ppipes_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*ListDiscoveredPeersRequest_Dht)(nil),
		(*ListDiscoveredPeersRequest_Mdns)(nil),
	}
	file_p2ppipes_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*IO_Null)(nil),
		(*IO_Tcp)(nil),
		(*IO_Udp)(nil),
		(*IO_Unix)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_p2ppipes_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_p2ppipes_proto_goTypes,
		DependencyIndexes: file_p2ppipes_proto_depIdxs,
		EnumInfos:         file_p2ppipes_proto_enumTypes,
		MessageInfos:      file_p2ppipes_proto_msgTypes,
	}.Build()
	File_p2ppipes_proto = out.File
	file_p2ppipes_proto_rawDesc = nil
	file_p2ppipes_proto_goTypes = nil
	file_p2ppipes_proto_depIdxs = nil
}
